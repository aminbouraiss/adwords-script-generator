#!/usr/bin/env node
var _ = require('lodash');
var path = require('path');
var program = require('commander');
var pkg = require('../package.json');

var commands = path.join(__dirname, '../lib/commands');

program
  .version(pkg.version);

program
  .command('auth <path/to/client/secret.json>')
  .option('-b, --no-launch-browser',
    'Do not use a local webserver to capture oauth code and instead require copy/paste')
  .option('-p, --port [port]', 'Port to use for webserver')
  .description('Authorize gapps to use the Google Drive API')
  .action(function(clientSecretPath, options) {
    require(commands + '/auth')(clientSecretPath, options.launchBrowser)
      .then(function() {
        process.exit(0);
      });
  });

program
  .command('upload')
  .description('Upload back to an Apps Script project in Google Drive. Run from root of project directory')
  .alias('push')
  .action(require(commands + '/upload'));

program
  .command('init <fileId>')
  .option('-k, --key [key]')
  .option('-s, --subdir [subdir]')
  .option('-o, --overwrite')
  .description('Initialize project. The external Apps Script project must exist.')
  .alias('clone')
  .action(require(commands + '/init'));

program
  .command('oauth-callback-url')
  .description('Get the OAuth Callback URL for a project')
  .action(require(commands + '/oauthCallbackUrl'));

program
  .parse(process.argv);

if (program.args.length < 1 ) {
  console.log('No command specified.');
  program.outputHelp();
  process.exit(2);
}
